{"version":3,"sources":["./src/app/auth/sign-in/sign-in.module.ts","./src/app/auth/sign-in/sign-in.component.ts"],"names":["routes","component","SignInComponent","formBuilder","accountService","router","this","signInFormGroup","group","email","password","invalid","signIn","get","value","subscribe","redirectToMainPage","navigate","submit","path","SignInModule"],"mappings":"yPAMA,MAAMA,EAAiB,CACrB,CACEC,UCsDG,M,MAAMC,EAGX,YACUC,EACAC,EACAC,GAFA,KAAAF,cACA,KAAAC,iBACA,KAAAC,SAERC,KAAKC,gBAAkBD,KAAKH,YAAYK,MAAM,CAC5CC,MAAO,CAAC,GAAI,CAAC,cAAqB,aAClCC,SAAU,CAAC,GAAI,CAAC,kBAIb,S,QACDJ,KAAKC,gBAAgBI,SAIzBL,KAAKF,eACFQ,OACkC,QAAjC,EAAAN,KAAKC,gBAAgBM,IAAI,gBAAQ,eAAEC,MACC,QAApC,EAAAR,KAAKC,gBAAgBM,IAAI,mBAAW,eAAEC,OAEvCC,UAAU,IAAMT,KAAKU,sBAGlB,qBACNV,KAAKD,OAAOY,SAAS,CAAC,O,6CA5Bbf,GAAe,qC,wBAAfA,EAAe,kkB,GAAA,MAtDxB,iBACE,iBACE,iBACE,iBACE,gBAAwB,mCAAuB,QAE/C,kBAAoC,mCAAY,EAAAgB,WAC9C,iBACE,mBAAmB,iBAAK,QACxB,oBAQA,wBAIF,QAEA,kBACE,qBAAsB,qBAAQ,QAC9B,qBAQA,wBAIF,QAEA,sBAKE,sBACF,QACF,QACF,QACF,QACF,QACF,S,iBA5Cc,8CAYA,oFAAmD,wEAgBnD,uFAAsD,2EAOxD,uD,myBAaT,GDrDHC,KAAM,KAaH,Y,MAAMC,G,6CAAAA,I,wBAAAA,I,4BAPF,CACP,cAAsBpB,GACtB,KACA,KACA,Q,GAGG","file":"src_app_auth_sign-in_sign-in_module_ts.f48d449cc6eb7d3c4cfd.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { RouterModule, Routes } from '@angular/router';\nimport { ValidatorModule } from '@shared/components/form/validator/validator.module';\nimport { SignInComponent } from './sign-in.component';\n\nconst routes: Routes = [\n  {\n    component: SignInComponent,\n    path: '',\n  },\n];\n\n@NgModule({\n  declarations: [SignInComponent],\n  imports: [\n    RouterModule.forChild(routes),\n    FormsModule,\n    ReactiveFormsModule,\n    ValidatorModule,\n  ],\n})\nexport class SignInModule {}\n","import { Component } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { AccountService } from '@core/services/account.service';\n\n@Component({\n  selector: 'sign-in-page',\n  template: `\n    <div class=\"sign-in-page\">\n      <div class=\"sign-in-page__wrapper\">\n        <div class=\"sign-in-page__sign-in-section\">\n          <div class=\"sign-in-page__sign-in-section-wrapper\">\n            <h1 class=\"text-center\">Sign in to your account</h1>\n\n            <form [formGroup]=\"signInFormGroup\" (ngSubmit)=\"submit()\">\n              <div class=\"form-group\">\n                <label for=\"email\">Email</label>\n                <input\n                  type=\"text\"\n                  class=\"form-control\"\n                  id=\"email\"\n                  formControlName=\"email\"\n                  required\n                />\n\n                <validator\n                  [isTouched]=\"signInFormGroup.get('email')?.touched\"\n                  [controlErrors]=\"signInFormGroup.get('email')?.errors\"\n                ></validator>\n              </div>\n\n              <div class=\"form-group\">\n                <label for=\"password\">Password</label>\n                <input\n                  type=\"password\"\n                  class=\"form-control\"\n                  id=\"password\"\n                  formControlName=\"password\"\n                  required\n                />\n\n                <validator\n                  [isTouched]=\"signInFormGroup.get('password')?.touched\"\n                  [controlErrors]=\"signInFormGroup.get('password')?.errors\"\n                ></validator>\n              </div>\n\n              <button\n                type=\"submit\"\n                [disabled]=\"signInFormGroup.invalid\"\n                class=\"btn btn-secondary w-100\"\n              >\n                Sign In\n              </button>\n            </form>\n          </div>\n        </div>\n      </div>\n    </div>\n  `,\n  styleUrls: ['sign-in.component.scss'],\n})\nexport class SignInComponent {\n  public signInFormGroup: FormGroup;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private accountService: AccountService,\n    private router: Router\n  ) {\n    this.signInFormGroup = this.formBuilder.group({\n      email: ['', [Validators.required, Validators.email]],\n      password: ['', [Validators.required]],\n    });\n  }\n\n  public submit(): void {\n    if (this.signInFormGroup.invalid) {\n      return;\n    }\n\n    this.accountService\n      .signIn(\n        this.signInFormGroup.get('email')?.value,\n        this.signInFormGroup.get('password')?.value\n      )\n      .subscribe(() => this.redirectToMainPage());\n  }\n\n  private redirectToMainPage(): void {\n    this.router.navigate(['/']);\n  }\n}\n"],"sourceRoot":"webpack:///"}