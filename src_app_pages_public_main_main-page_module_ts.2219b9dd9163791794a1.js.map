{"version":3,"sources":["./src/app/shared/components/email-section/email-section.component.ts","./src/app/shared/components/email-section/email-section.component.html","./src/app/shared/components/text-section/text-section.component.html","./src/app/shared/components/text-section/text-section.component.ts","./src/app/shared/components/list-section/list-section.component.html","./src/app/shared/components/list-section/list-section.component.ts","./node_modules/rxjs/_esm2015/internal/observable/zip.js","./node_modules/rxjs/_esm2015/internal/operators/groupBy.js","./node_modules/rxjs/_esm2015/internal/operators/toArray.js","./node_modules/rxjs/_esm2015/internal/operators/reduce.js","./src/app/shared/components/abilities-list/abilities-list.component.html","./src/app/shared/components/abilities-list/abilities-list.component.ts","./src/app/shared/components/card-hover-effect/card-hover-effect.component.html","./src/app/shared/components/card-hover-effect/card-hover-effect.component.ts","./src/app/shared/components/hobby-list/hobby-list.component.html","./src/app/shared/components/hobby-list/hobby-list.component.ts","./src/app/pages/public/main/main-page.component.html","./src/app/pages/public/main/main-page.module.ts","./src/app/pages/public/main/main-page.component.ts"],"names":["EmailSectionComponent","fb","this","emailForm","group","subject","control","TextSectionComponent","data","ListSectionComponent","sectionTitle","subSectionTitle","ZipOperator","resultSelector","subscriber","source","subscribe","ZipSubscriber","Subscriber","destination","values","Object","create","super","iterators","active","undefined","value","isArray","push","StaticArrayIterator","StaticIterator","ZipBufferIterator","len","length","unsubscribe","i","iterator","stillUnsubscribed","add","complete","hasValue","shouldComplete","args","result","next","hasCompleted","done","_tryresultSelector","apply","err","error","nextResult","Boolean","array","index","parent","observable","buffer","isComplete","shift","notifyInactive","innerValue","checkIterators","innerSubscribe","GroupByOperator","keySelector","elementSelector","durationSelector","subjectSelector","GroupBySubscriber","groups","attemptedToUnsubscribe","count","key","_group","Map","element","get","Subject","set","groupedObservable","GroupedObservable","duration","GroupDurationSubscriber","closed","forEach","clear","delete","removeGroup","Observable","groupSubject","refCountSubscription","subscription","Subscription","InnerRefCountSubscription","toArrayReducer","arr","item","toArray","accumulator","seed","arguments","pipe","scan","takeLast","defaultIfEmpty","d","acc","reduce","AbilitiesListComponent","abilitiesObserver$","from","ability","abilityName","lift","mergeMap","observables","pop","fromArray","zip","of","CardHoverEffectComponent","hobby","isTriggered","height","transform","opacity","HobbyListComponent","routes","path","component","MainPageComponent","headerTitle","apolloProvider","editablePage","apolloBase","use","selectedResume$","query","map","response","mapResumeResponse","announceIfEditable","editable","editionPage","setTitle","title","description","getDefaultResume","careers","abilities","hobbies","personalInformation","MainPageModule"],"mappings":"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","file":"src_app_pages_public_main_main-page_module_ts.2219b9dd9163791794a1.js","sourcesContent":["import { Component } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'email-section',\n  templateUrl: 'email-section.component.html',\n  styleUrls: ['email-section.component.scss'],\n})\nexport class EmailSectionComponent {\n  public emailForm: FormGroup;\n\n  constructor(private fb: FormBuilder) {\n    this.emailForm = fb.group({\n      subject: fb.control('', [Validators.required]),\n    });\n  }\n}\n","<section class=\"email-section\" aria-label=\"contact\">\n  <div class=\"limiter\">\n    <div class=\"email-section__container container-fluid shadow-lg rounded\">\n      <h2 class=\"section-title text-center\" id=\"contact\">Contact</h2>\n      <h3 class=\"text-center\">Wanna get in touch? Just send me an email</h3>\n\n      <div class=\"row\">\n        <div class=\"email-section__svg col-12 col-md-6\">\n          <div class=\"d-flex flex-column justify-content-center\">\n            <svg viewBox=\"0 0 48 48\" class=\"align-self-center\">\n              <style>\n                .cls-0,\n                .cls-1,\n                .cls-2,\n                .cls-3 {\n                  fill: none;\n                  stroke: #00758069;\n                  stroke-linecap: round;\n                  stroke-linejoin: round;\n                  stroke-width: 2px;\n                }\n              </style>\n              <path\n                class=\"cls-0\"\n                d=\"M35.81,43.69A19.29,19.29,0,0,0,47,47a46.9,46.9,0,0,1-5.2-8.5A23,23,0,1,0,35.81,43.69Z\"\n              />\n              <circle class=\"cls-1\" cx=\"14.01\" cy=\"24.02\" r=\"2\" />\n              <circle class=\"cls-2\" cx=\"23.98\" cy=\"23.98\" r=\"2\" />\n              <circle class=\"cls-3\" cx=\"33.99\" cy=\"23.98\" r=\"2\" />\n            </svg>\n          </div>\n        </div>\n\n        <div class=\"email-section__form col-12 col-md-6 rounded\">\n          <form [formGroup]=\"emailForm\">\n            <div class=\"form-group\">\n              <label for=\"subject\">Subject</label>\n\n              <input\n                aria-label=\"subject\"\n                formControlName=\"subject\"\n                class=\"form-control\"\n                placeholder=\"Subject\"\n                type=\"text\"\n                id=\"subject\"\n              />\n            </div>\n\n            <a\n              [href]=\"\n                'mailto:mcasillasur@gmail.com?subject=' +\n                emailForm.get('subject')?.value\n              \"\n              class=\"btn btn-secondary\"\n            >\n              Send an Email\n            </a>\n          </form>\n        </div>\n      </div>\n    </div>\n  </div>\n</section>\n","<section class=\"text-section\" aria-label=\"about me\" id=\"about\">\n  <div class=\"limiter\">\n    <div class=\"text-section__container container-fluid\">\n      <div class=\"row gx-5\">\n        <ng-container *ngIf=\"data as data\">\n          <div class=\"text-section__image_wrapper col-12 col-lg-4\">\n            <figure class=\"text-section__image\">\n              <img src=\"{{ data.profileImage }}\" alt=\"Profile picture\" />\n\n              <figcaption class=\"figure-caption text-center\">\n                <p>\n                  Age: <strong>{{ data.age }}</strong>\n                </p>\n                <p>\n                  Location:\n                  <strong>\n                    {{ data.city }}, {{ data.state }}.\n                    {{ data.country }}\n                  </strong>\n                </p>\n              </figcaption>\n            </figure>\n          </div>\n\n          <div\n            class=\"\n              text-section__text-wrapper\n              text-center text-lg-left\n              col-12 col-lg-8\n            \"\n            [innerHtml]=\"data.about | HTMLSanitizer\"\n          ></div>\n        </ng-container>\n      </div>\n    </div>\n  </div>\n</section>\n","import { Component, Input } from '@angular/core';\nimport { ITextSectionData } from '@core/interfaces/text-section-data.interface';\n\n@Component({\n  selector: 'text-section',\n  templateUrl: 'text-section.component.html',\n  styleUrls: ['text-section.component.scss'],\n})\nexport class TextSectionComponent {\n  @Input()\n  data: ITextSectionData | null = null;\n}\n","<section class=\"list-section\" aria-label=\"experience\">\n  <div class=\"limiter\">\n    <div class=\"list-section__container container-fluid\">\n      <h2 class=\"section-title text-center\" id=\"experience\">\n        {{ sectionTitle }}\n      </h2>\n\n      <div class=\"list-section__list\">\n        <h3>{{ subSectionTitle }}</h3>\n\n        <div class=\"list-section__list-wrapper row\">\n          <ng-container *ngFor=\"let item of data\">\n            <div class=\"list-section__item col-12\">\n              <div class=\"row w-100\">\n                <div class=\"list-section__item-title col-12 col-md-4\">\n                  <h4 class=\"list-section__item-name\">\n                    {{ item.companyName }}\n                  </h4>\n\n                  <p class=\"list-section__item-period\">\n                    {{ item.startDate | date: \"MMMM y\" }} -\n                    {{\n                      item.endDate ? (item.endDate | date: \"MMMM y\") : \"Current\"\n                    }}\n                  </p>\n\n                  <p class=\"list-section__item-location\">\n                    <i class=\"bi bi-geo\"></i> {{ item.city }}, {{ item.state }}.\n                    {{ item.country }}\n                  </p>\n                </div>\n\n                <div class=\"list-section__item-body col-12 col-md-8\">\n                  <h5 class=\"list-section__item-job\">{{ item.jobTitle }}</h5>\n\n                  <div\n                    class=\"list-section__item-job-description\"\n                    [innerHtml]=\"item.description | HTMLSanitizer\"\n                  ></div>\n                </div>\n              </div>\n            </div>\n          </ng-container>\n        </div>\n      </div>\n    </div>\n  </div>\n</section>\n","import { Component, Input } from '@angular/core';\nimport { ICareer } from '@core/interfaces/career.interface';\n\n@Component({\n  selector: 'list-section',\n  templateUrl: 'list-section.component.html',\n  styleUrls: ['list-section.component.scss'],\n})\nexport class ListSectionComponent {\n  @Input()\n  data: ICareer[] | null = null;\n\n  public sectionTitle = 'Experiencie';\n  public subSectionTitle = 'Careers';\n}\n","import { fromArray } from './fromArray';\nimport { isArray } from '../util/isArray';\nimport { Subscriber } from '../Subscriber';\nimport { iterator as Symbol_iterator } from '../../internal/symbol/iterator';\nimport { SimpleOuterSubscriber, SimpleInnerSubscriber, innerSubscribe } from '../innerSubscribe';\nexport function zip(...observables) {\n    const resultSelector = observables[observables.length - 1];\n    if (typeof resultSelector === 'function') {\n        observables.pop();\n    }\n    return fromArray(observables, undefined).lift(new ZipOperator(resultSelector));\n}\nexport class ZipOperator {\n    constructor(resultSelector) {\n        this.resultSelector = resultSelector;\n    }\n    call(subscriber, source) {\n        return source.subscribe(new ZipSubscriber(subscriber, this.resultSelector));\n    }\n}\nexport class ZipSubscriber extends Subscriber {\n    constructor(destination, resultSelector, values = Object.create(null)) {\n        super(destination);\n        this.resultSelector = resultSelector;\n        this.iterators = [];\n        this.active = 0;\n        this.resultSelector = (typeof resultSelector === 'function') ? resultSelector : undefined;\n    }\n    _next(value) {\n        const iterators = this.iterators;\n        if (isArray(value)) {\n            iterators.push(new StaticArrayIterator(value));\n        }\n        else if (typeof value[Symbol_iterator] === 'function') {\n            iterators.push(new StaticIterator(value[Symbol_iterator]()));\n        }\n        else {\n            iterators.push(new ZipBufferIterator(this.destination, this, value));\n        }\n    }\n    _complete() {\n        const iterators = this.iterators;\n        const len = iterators.length;\n        this.unsubscribe();\n        if (len === 0) {\n            this.destination.complete();\n            return;\n        }\n        this.active = len;\n        for (let i = 0; i < len; i++) {\n            let iterator = iterators[i];\n            if (iterator.stillUnsubscribed) {\n                const destination = this.destination;\n                destination.add(iterator.subscribe());\n            }\n            else {\n                this.active--;\n            }\n        }\n    }\n    notifyInactive() {\n        this.active--;\n        if (this.active === 0) {\n            this.destination.complete();\n        }\n    }\n    checkIterators() {\n        const iterators = this.iterators;\n        const len = iterators.length;\n        const destination = this.destination;\n        for (let i = 0; i < len; i++) {\n            let iterator = iterators[i];\n            if (typeof iterator.hasValue === 'function' && !iterator.hasValue()) {\n                return;\n            }\n        }\n        let shouldComplete = false;\n        const args = [];\n        for (let i = 0; i < len; i++) {\n            let iterator = iterators[i];\n            let result = iterator.next();\n            if (iterator.hasCompleted()) {\n                shouldComplete = true;\n            }\n            if (result.done) {\n                destination.complete();\n                return;\n            }\n            args.push(result.value);\n        }\n        if (this.resultSelector) {\n            this._tryresultSelector(args);\n        }\n        else {\n            destination.next(args);\n        }\n        if (shouldComplete) {\n            destination.complete();\n        }\n    }\n    _tryresultSelector(args) {\n        let result;\n        try {\n            result = this.resultSelector.apply(this, args);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        this.destination.next(result);\n    }\n}\nclass StaticIterator {\n    constructor(iterator) {\n        this.iterator = iterator;\n        this.nextResult = iterator.next();\n    }\n    hasValue() {\n        return true;\n    }\n    next() {\n        const result = this.nextResult;\n        this.nextResult = this.iterator.next();\n        return result;\n    }\n    hasCompleted() {\n        const nextResult = this.nextResult;\n        return Boolean(nextResult && nextResult.done);\n    }\n}\nclass StaticArrayIterator {\n    constructor(array) {\n        this.array = array;\n        this.index = 0;\n        this.length = 0;\n        this.length = array.length;\n    }\n    [Symbol_iterator]() {\n        return this;\n    }\n    next(value) {\n        const i = this.index++;\n        const array = this.array;\n        return i < this.length ? { value: array[i], done: false } : { value: null, done: true };\n    }\n    hasValue() {\n        return this.array.length > this.index;\n    }\n    hasCompleted() {\n        return this.array.length === this.index;\n    }\n}\nclass ZipBufferIterator extends SimpleOuterSubscriber {\n    constructor(destination, parent, observable) {\n        super(destination);\n        this.parent = parent;\n        this.observable = observable;\n        this.stillUnsubscribed = true;\n        this.buffer = [];\n        this.isComplete = false;\n    }\n    [Symbol_iterator]() {\n        return this;\n    }\n    next() {\n        const buffer = this.buffer;\n        if (buffer.length === 0 && this.isComplete) {\n            return { value: null, done: true };\n        }\n        else {\n            return { value: buffer.shift(), done: false };\n        }\n    }\n    hasValue() {\n        return this.buffer.length > 0;\n    }\n    hasCompleted() {\n        return this.buffer.length === 0 && this.isComplete;\n    }\n    notifyComplete() {\n        if (this.buffer.length > 0) {\n            this.isComplete = true;\n            this.parent.notifyInactive();\n        }\n        else {\n            this.destination.complete();\n        }\n    }\n    notifyNext(innerValue) {\n        this.buffer.push(innerValue);\n        this.parent.checkIterators();\n    }\n    subscribe() {\n        return innerSubscribe(this.observable, new SimpleInnerSubscriber(this));\n    }\n}\n//# sourceMappingURL=zip.js.map","import { Subscriber } from '../Subscriber';\nimport { Subscription } from '../Subscription';\nimport { Observable } from '../Observable';\nimport { Subject } from '../Subject';\nexport function groupBy(keySelector, elementSelector, durationSelector, subjectSelector) {\n    return (source) => source.lift(new GroupByOperator(keySelector, elementSelector, durationSelector, subjectSelector));\n}\nclass GroupByOperator {\n    constructor(keySelector, elementSelector, durationSelector, subjectSelector) {\n        this.keySelector = keySelector;\n        this.elementSelector = elementSelector;\n        this.durationSelector = durationSelector;\n        this.subjectSelector = subjectSelector;\n    }\n    call(subscriber, source) {\n        return source.subscribe(new GroupBySubscriber(subscriber, this.keySelector, this.elementSelector, this.durationSelector, this.subjectSelector));\n    }\n}\nclass GroupBySubscriber extends Subscriber {\n    constructor(destination, keySelector, elementSelector, durationSelector, subjectSelector) {\n        super(destination);\n        this.keySelector = keySelector;\n        this.elementSelector = elementSelector;\n        this.durationSelector = durationSelector;\n        this.subjectSelector = subjectSelector;\n        this.groups = null;\n        this.attemptedToUnsubscribe = false;\n        this.count = 0;\n    }\n    _next(value) {\n        let key;\n        try {\n            key = this.keySelector(value);\n        }\n        catch (err) {\n            this.error(err);\n            return;\n        }\n        this._group(value, key);\n    }\n    _group(value, key) {\n        let groups = this.groups;\n        if (!groups) {\n            groups = this.groups = new Map();\n        }\n        let group = groups.get(key);\n        let element;\n        if (this.elementSelector) {\n            try {\n                element = this.elementSelector(value);\n            }\n            catch (err) {\n                this.error(err);\n            }\n        }\n        else {\n            element = value;\n        }\n        if (!group) {\n            group = (this.subjectSelector ? this.subjectSelector() : new Subject());\n            groups.set(key, group);\n            const groupedObservable = new GroupedObservable(key, group, this);\n            this.destination.next(groupedObservable);\n            if (this.durationSelector) {\n                let duration;\n                try {\n                    duration = this.durationSelector(new GroupedObservable(key, group));\n                }\n                catch (err) {\n                    this.error(err);\n                    return;\n                }\n                this.add(duration.subscribe(new GroupDurationSubscriber(key, group, this)));\n            }\n        }\n        if (!group.closed) {\n            group.next(element);\n        }\n    }\n    _error(err) {\n        const groups = this.groups;\n        if (groups) {\n            groups.forEach((group, key) => {\n                group.error(err);\n            });\n            groups.clear();\n        }\n        this.destination.error(err);\n    }\n    _complete() {\n        const groups = this.groups;\n        if (groups) {\n            groups.forEach((group, key) => {\n                group.complete();\n            });\n            groups.clear();\n        }\n        this.destination.complete();\n    }\n    removeGroup(key) {\n        this.groups.delete(key);\n    }\n    unsubscribe() {\n        if (!this.closed) {\n            this.attemptedToUnsubscribe = true;\n            if (this.count === 0) {\n                super.unsubscribe();\n            }\n        }\n    }\n}\nclass GroupDurationSubscriber extends Subscriber {\n    constructor(key, group, parent) {\n        super(group);\n        this.key = key;\n        this.group = group;\n        this.parent = parent;\n    }\n    _next(value) {\n        this.complete();\n    }\n    _unsubscribe() {\n        const { parent, key } = this;\n        this.key = this.parent = null;\n        if (parent) {\n            parent.removeGroup(key);\n        }\n    }\n}\nexport class GroupedObservable extends Observable {\n    constructor(key, groupSubject, refCountSubscription) {\n        super();\n        this.key = key;\n        this.groupSubject = groupSubject;\n        this.refCountSubscription = refCountSubscription;\n    }\n    _subscribe(subscriber) {\n        const subscription = new Subscription();\n        const { refCountSubscription, groupSubject } = this;\n        if (refCountSubscription && !refCountSubscription.closed) {\n            subscription.add(new InnerRefCountSubscription(refCountSubscription));\n        }\n        subscription.add(groupSubject.subscribe(subscriber));\n        return subscription;\n    }\n}\nclass InnerRefCountSubscription extends Subscription {\n    constructor(parent) {\n        super();\n        this.parent = parent;\n        parent.count++;\n    }\n    unsubscribe() {\n        const parent = this.parent;\n        if (!parent.closed && !this.closed) {\n            super.unsubscribe();\n            parent.count -= 1;\n            if (parent.count === 0 && parent.attemptedToUnsubscribe) {\n                parent.unsubscribe();\n            }\n        }\n    }\n}\n//# sourceMappingURL=groupBy.js.map","import { reduce } from './reduce';\nfunction toArrayReducer(arr, item, index) {\n    if (index === 0) {\n        return [item];\n    }\n    arr.push(item);\n    return arr;\n}\nexport function toArray() {\n    return reduce(toArrayReducer, []);\n}\n//# sourceMappingURL=toArray.js.map","import { scan } from './scan';\nimport { takeLast } from './takeLast';\nimport { defaultIfEmpty } from './defaultIfEmpty';\nimport { pipe } from '../util/pipe';\nexport function reduce(accumulator, seed) {\n    if (arguments.length >= 2) {\n        return function reduceOperatorFunctionWithSeed(source) {\n            return pipe(scan(accumulator, seed), takeLast(1), defaultIfEmpty(seed))(source);\n        };\n    }\n    return function reduceOperatorFunction(source) {\n        return pipe(scan((acc, value, index) => accumulator(acc, value, index + 1)), takeLast(1))(source);\n    };\n}\n//# sourceMappingURL=reduce.js.map","<section class=\"abilities-list-section\" aria-label=\"abilities\">\n  <div class=\"limiter\">\n    <div class=\"abilities-list-section__container container-fluid\">\n      <h2 class=\"section-title text-center\" id=\"abilities\">\n        {{ sectionTitle }}\n      </h2>\n\n      <ng-container *ngFor=\"let abilitySet of abilitiesObserver$ | async\">\n        <div class=\"abilities-list-section__list\">\n          <ng-container [ngSwitch]=\"abilitySet[0]\">\n            <h3 *ngSwitchCase=\"'SKILL'\">Skills</h3>\n            <h3 *ngSwitchCase=\"'LANGUAGE'\">Languages</h3>\n            <h3 *ngSwitchCase=\"'OS'\">Operating Systems</h3>\n            <h3 *ngSwitchCase=\"'TOOL'\">Tools (Other Software)</h3>\n          </ng-container>\n\n          <div class=\"abilities-list-section__list-wrapper row\">\n            <div\n              *ngFor=\"let abilityItem of abilitySet[1]\"\n              class=\"abilities-list-section__item col-12 col-md-6\"\n            >\n              <div class=\"row\">\n                <div class=\"abilities-list-section__ability-name col-5\">\n                  <img\n                    [src]=\"abilityItem.logo\"\n                    height=\"50\"\n                    width=\"50\"\n                    [alt]=\"abilityItem.description\"\n                    *ngIf=\"abilitySet[0] !== 'LANGUAGE'\"\n                  />\n                  <span *ngIf=\"abilitySet[0] === 'LANGUAGE'\">\n                    <i>\n                      {{ abilityItem.description | uppercase }}\n                    </i>\n                  </span>\n                </div>\n\n                <div class=\"abilities-list-section__progress col-7\">\n                  <span class=\"abilities-list-section__progress-bar\">\n                    <span\n                      animateWith\n                      [percent]=\"abilityItem.percent\"\n                      class=\"abilities-list-section__progress-bar-increment\"\n                    ></span\n                  ></span>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </ng-container>\n    </div>\n  </div>\n</section>\n","import { Component, Input, OnInit } from '@angular/core';\nimport { IAbility } from '@core/interfaces/ability.interface';\nimport { from, Observable, of, zip } from 'rxjs';\nimport { groupBy, mergeMap, tap, toArray } from 'rxjs/operators';\n\n@Component({\n  selector: 'abilities-list',\n  templateUrl: 'abilities-list.component.html',\n  styleUrls: ['abilities-list.component.scss'],\n})\nexport class AbilitiesListComponent implements OnInit {\n  @Input()\n  data: IAbility[] = [];\n\n  public sectionTitle = 'Abilities';\n  public abilitiesObserver$: Observable<any[]> = new Observable<any[]>();\n\n  ngOnInit(): void {\n    this.abilitiesObserver$ = from(this.data).pipe(\n      groupBy((ability: IAbility) => ability.abilityName),\n      mergeMap((group) => zip(of(group.key), group.pipe(toArray()))),\n      toArray()\n    );\n  }\n}\n","<div\n  class=\"card-hover-effect\"\n  (mouseenter)=\"this.isTriggered = !this.isTriggered\"\n  (mouseleave)=\"this.isTriggered = !this.isTriggered\"\n>\n  <ng-container *ngIf=\"hobby\">\n    <div class=\"card-hover-effect__text\" [@animateHeight]=\"triggerEp\">\n      <h3 class=\"card-hover-effect__title\">{{ hobby.name }}</h3>\n\n      <div\n        class=\"card-hover-effect__body\"\n        [@childAnimation]=\"triggerEp\"\n        [innerHtml]=\"hobby.description | HTMLSanitizer\"\n      ></div>\n    </div>\n\n    <picture>\n      <source srcset=\"{{ hobby.image }}, {{ hobby.imagehd }} 2x\" />\n\n      <img src=\"{{ hobby.image }}\" [alt]=\"hobby.name\" />\n    </picture>\n  </ng-container>\n</div>\n","import {\n  animate,\n  animateChild,\n  group,\n  query,\n  state,\n  style,\n  transition,\n  trigger,\n} from '@angular/animations';\nimport { Component, Input } from '@angular/core';\nimport { IHobby } from '@core/interfaces/hobby.interface';\n\n@Component({\n  templateUrl: 'card-hover-effect.component.html',\n  selector: 'card-hover-effect',\n  styleUrls: ['card-hover-effect.component.scss'],\n  animations: [\n    trigger('animateHeight', [\n      state('init', style({ height: '*', transform: 'translateY(10%)' })),\n      state('ends', style({ height: '100%', transform: 'translateY(0)' })),\n\n      transition('* <=> *', [\n        group([query('@childAnimation', animateChild()), animate(400)]),\n      ]),\n    ]),\n    trigger('childAnimation', [\n      state('init', style({ transform: 'translateY(50%)', opacity: '0' })),\n      state('ends', style({ transform: 'translateY(0)', opacity: 1 })),\n      transition('* <=> *', animate(400)),\n    ]),\n  ],\n})\nexport class CardHoverEffectComponent {\n  @Input()\n  hobby: IHobby | null = null;\n\n  public isTriggered = false;\n\n  get triggerEp(): string {\n    return this.isTriggered ? 'ends' : 'init';\n  }\n}\n","<section class=\"hobby-list\" aria-label=\"hobbies\">\n  <div class=\"limiter\">\n    <div class=\"hobby-list__container container-fluid\">\n      <h2 class=\"section-title text-center\" id=\"hobby-list\">\n        {{ sectionTitle }}\n      </h2>\n      <div class=\"row\">\n        <card-hover-effect\n          *ngFor=\"let card of data\"\n          [hobby]=\"card\"\n          class=\"col-12 col-md-4 hobby-list__card-item\"\n        ></card-hover-effect>\n      </div>\n    </div>\n  </div>\n</section>\n","import { Component, Input } from '@angular/core';\nimport { IHobby } from '@core/interfaces/hobby.interface';\n\n@Component({\n  selector: 'hobby-list',\n  templateUrl: 'hobby-list.component.html',\n  styleUrls: ['hobby-list.component.scss'],\n})\nexport class HobbyListComponent {\n  @Input()\n  data: IHobby[] | null = null;\n\n  public sectionTitle = 'Hobbies';\n}\n","<ng-container *ngIf=\"selectedResume$ | async as selectedResume\">\n  <text-section [data]=\"selectedResume.personalInformation\"></text-section>\n  <list-section\n    *ngIf=\"selectedResume.careers.length > 0\"\n    [data]=\"selectedResume.careers\"\n  ></list-section>\n\n  <abilities-list\n    *ngIf=\"selectedResume.abilities.length > 0\"\n    [data]=\"selectedResume.abilities\"\n  ></abilities-list>\n\n  <hobby-list\n    *ngIf=\"selectedResume.hobbies.length > 0\"\n    [data]=\"selectedResume.hobbies\"\n  ></hobby-list>\n</ng-container>\n\n<email-section></email-section>\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { SharedModule } from '@shared/shared.module';\nimport { MainPageComponent } from './main-page.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: MainPageComponent,\n  },\n];\n\n@NgModule({\n  declarations: [MainPageComponent],\n  imports: [\n    SharedModule,\n    RouterModule.forChild(routes),\n    CommonModule,\n  ],\n})\nexport class MainPageModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { GraphQLClients } from '@core/enums/graphql-clients.enum';\nimport { SELECTED_RESUME } from '@core/graphql/queries/resume-queries';\nimport { EditablePageService } from '@core/services/editable-page.service';\nimport { HeaderTitleService } from '@core/services/header-title.service';\nimport { Apollo, ApolloBase } from 'apollo-angular';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n@Component({\n  templateUrl: 'main-page.component.html',\n  styleUrls: ['main-page.component.scss'],\n})\nexport class MainPageComponent implements OnInit {\n  public selectedResume$: Observable<any>;\n  private apolloBase: ApolloBase;\n\n  constructor(\n    private headerTitle: HeaderTitleService,\n    private apolloProvider: Apollo,\n    private editablePage: EditablePageService\n  ) {\n    this.apolloBase = this.apolloProvider.use(GraphQLClients.MAIN);\n    this.selectedResume$ = this.apolloBase\n      .query({ query: SELECTED_RESUME })\n      .pipe(map((response: any) => this.mapResumeResponse(response)));\n  }\n\n  ngOnInit(): void {\n    this.editablePage.announceIfEditable({\n      editable: true,\n      editionPage: '/edit-resume',\n    });\n\n    this.headerTitle.setTitle({\n      title: 'Hi Everyone',\n      description: 'Welcome to my resume Website',\n    });\n  }\n\n  protected mapResumeResponse(response: any): any {\n    const {\n      data: { getDefaultResume },\n    } = response;\n\n    if (!getDefaultResume) {\n      return null;\n    }\n\n    const { careers, abilities, hobbies, ...profileInfo } = getDefaultResume;\n\n    return {\n      careers,\n      abilities,\n      hobbies,\n      personalInformation: profileInfo,\n    };\n  }\n}\n"],"sourceRoot":"webpack:///"}