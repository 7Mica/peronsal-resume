{"version":3,"sources":["./src/app/core/services/editable-page.service.ts","./src/app/core/services/theme-color.service.ts","./src/app/core/directives/theme-color.directive.ts","./src/app/core/functions/form-validators.ts","./src/app/shared/components/admin/update-user-password-modal/update-user-password-modal.component.ts","./src/app/shared/components/tool-bar/tool-bar.component.ts","./src/app/shared/layout/header/fixed-header.directive.ts","./src/app/shared/layout/header/close-menu.directive.ts","./src/app/shared/layout/header/open-mobile-menu.directive.ts","./src/app/shared/layout/header/primary-header.component.html","./src/app/shared/layout/header/primary-header.component.ts","./src/app/core/graphql/queries/github.queries.ts","./src/app/shared/layout/footer/primary-footer.component.html","./src/app/shared/layout/footer/primary-footer.component.ts","./src/app/pages/pages.routes.ts","./src/app/pages/pages.component.ts","./src/app/pages/pages.module.ts"],"names":["EditablePageService","isEditable","editable","this","asObservable","state","next","primary","name","properties","secondary","tertiary","ThemeColorService","localStorageService","active","availableThemes","themeChanged$","ReplaySubject","setActiveTheme","setValue","theme","Object","keys","forEach","property","document","documentElement","style","setProperty","ThemeColorDirective","elementRef","renderer","themeService","themeChangedSubscription","Subscription","themeValueChanged","subscribe","currentTheme","switchTheme","getValue","setPrimaryTheme","setSecondaryTheme","setTertiaryTheme","unsubscribe","removeClass","nativeElement","addClass","ThemeColorDirectiveModule","comparePasswords","control","newPassword","get","repeatNewPassword","value","notMatch","UpdateUserPasswordModalComponent","formBuilder","apolloProvider","matDialogRef","apolloBase","use","updatePasswordForm","group","oldPassword","repeatPassword","validators","invalid","mutate","mutation","variables","val","close","error","console","log","submitUpdatePasswordForm","ToolBarComponent","editablePage","router","accountService","matDialog","routeChanged$","events","pipe","filter","navEvent","removeEditable","signedStatus$","observeSignedInStatus","accountInformation$","observeAccountInformation","editablePageStatus$","tellMeIfEditable","signOut","open","width","maxWidth","ToolBarModule","FixedHeaderDirective","elem","navHeight","getBoundingClientRect","querySelector","window","pageYOffset","height","innerHeight","CloseMenuDirective","elemRef","menu","parent","button","liElem","OpenMobileDirective","classList","contains","PrimaryHeaderComponent","headerTitle","route","headerTitle$","getTitle","GITHUB_BUILDCOMMIT","PrimaryFooterComponent","selectedTheme$","E","buildCommit$","query","map","data","getCurrentBuildCommit","build_id","tap","e","PAGES_ROUTES","path","component","PagesComponent","children","loadChildren","then","m","MainPageModule","ThanksModule","PlaygroundModule","AboutThisPageModule","canActivate","ResumeModule","PagesModule"],"mappings":"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","file":"src_app_pages_pages_module_ts.b7127fc16febc3e0bca3.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport { Observable, BehaviorSubject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class EditablePageService {\n  private isEditable: BehaviorSubject<EditableState> =\n    new BehaviorSubject<EditableState>({\n      editable: false,\n    });\n\n  public tellMeIfEditable(): Observable<EditableState> {\n    return this.isEditable.asObservable();\n  }\n\n  public announceIfEditable(state: EditableState): void {\n    this.isEditable.next(state);\n  }\n\n  public removeEditable(): void {\n    this.isEditable.next({ editable: false });\n  }\n}\n\nexport interface EditableState {\n  editionPage?: string;\n  editable: boolean;\n}\n","import { Injectable } from '@angular/core';\nimport { ITheme } from '@core/interfaces/theme.interface';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { LocalStorageService } from './local-storage.service';\n\nexport const primary: ITheme = {\n  name: 'primary-theme',\n  properties: {\n    '--primary-color-c': '#e48257',\n    '--secondary-color-c': '#3a6351',\n    '--speedy-color-c': '#393232',\n    '--quiet-color-c': '#f2edd7',\n    '--btn-secondary-hover-c': '#3a6351a2',\n\n    '--primary-color-rgb': '228, 130, 87',\n    '--secondary-color-rgb': '58, 99, 81',\n    '--speedy-color-rgb': '57, 50, 50',\n    '--quiet-color-rgb': '242, 237, 215',\n    '--btn-secondary-hover-rgb': '58, 99, 79',\n  },\n};\n\nexport const secondary: ITheme = {\n  name: 'secondary-theme',\n  properties: {\n    '--primary-color-c': '#fed049',\n    '--secondary-color-c': '#007580',\n    '--speedy-color-c': '#282846',\n    '--quiet-color-c': '#d8ebe4',\n    '--btn-secondary-hover-c': '#0199a7',\n\n    '--primary-color-rgb': '254, 208, 73',\n    '--secondary-color-rgb': '0, 117, 128',\n    '--speedy-color-rgb': '40, 40, 70',\n    '--quiet-color-rgb': '216, 235, 228',\n    '--btn-secondary-hover-rgb': '1, 153, 167',\n  },\n};\n\nexport const tertiary: ITheme = {\n  name: 'tertiary-theme',\n  properties: {\n    '--primary-color-c': '#008891',\n    '--secondary-color-c': '#00587a',\n    '--speedy-color-c': '#0f3057',\n    '--quiet-color-c': '#e7e7de',\n    '--btn-secondary-hover-c': '#00577a9a',\n\n    '--primary-color-rgb': '0, 136, 145',\n    '--secondary-color-rgb': '0, 88, 122',\n    '--speedy-color-rgb': '15, 48, 87',\n    '--quiet-color-rgb': '231, 231, 222',\n    '--btn-secondary-hover-rgb': '0, 87, 119',\n  },\n};\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ThemeColorService {\n  private active: ITheme = primary;\n  private availableThemes: ITheme[] = [primary, secondary, tertiary];\n  private themeChanged$: ReplaySubject<ITheme> = new ReplaySubject<ITheme>();\n\n  constructor(private localStorageService: LocalStorageService) {}\n\n  getAvailableThemes(): ITheme[] {\n    return this.availableThemes;\n  }\n\n  themeValueChanged(): Observable<ITheme> {\n    return this.themeChanged$.asObservable();\n  }\n\n  getActiveTheme(): ITheme {\n    return this.active;\n  }\n\n  setPrimaryTheme(): void {\n    this.setActiveTheme(primary);\n    this.localStorageService.setValue('themeConfig', 'primary-theme');\n    this.themeChanged$.next(primary);\n  }\n\n  setSecondaryTheme(): void {\n    this.setActiveTheme(secondary);\n    this.localStorageService.setValue('themeConfig', 'secondary-theme');\n    this.themeChanged$.next(secondary);\n  }\n\n  setTertiaryTheme(): void {\n    this.setActiveTheme(tertiary);\n    this.localStorageService.setValue('themeConfig', 'tertiary-theme');\n    this.themeChanged$.next(tertiary);\n  }\n\n  private setActiveTheme(theme: ITheme): void {\n    this.active = theme;\n\n    Object.keys(this.active.properties).forEach((property) => {\n      document.documentElement.style.setProperty(\n        property,\n        this.active.properties[property]\n      );\n    });\n  }\n}\n","import {\n  Directive,\n  ElementRef,\n  NgModule,\n  OnDestroy,\n  OnInit,\n  Renderer2,\n} from '@angular/core';\nimport { ITheme } from '@core/interfaces/theme.interface';\nimport { LocalStorageService } from '@core/services/local-storage.service';\nimport { ThemeColorService } from '@core/services/theme-color.service';\nimport { Subscription } from 'rxjs';\n\n@Directive({\n  selector: '[themeColor]',\n})\nexport class ThemeColorDirective implements OnDestroy, OnInit {\n  themeChangedSubscription: Subscription = new Subscription();\n\n  constructor(\n    private elementRef: ElementRef,\n    private renderer: Renderer2,\n    private themeService: ThemeColorService,\n    private localStorageService: LocalStorageService\n  ) {}\n\n  ngOnInit(): void {\n    this.themeChangedSubscription = this.themeService\n      .themeValueChanged()\n      .subscribe((currentTheme: ITheme) => this.switchTheme(currentTheme));\n\n    const savedThemeConfig = this.localStorageService.getValue('themeConfig');\n\n    switch (savedThemeConfig) {\n      case 'primary-theme':\n        this.themeService.setPrimaryTheme();\n        break;\n      case 'secondary-theme':\n        this.themeService.setSecondaryTheme();\n        break;\n      case 'tertiary-theme':\n        this.themeService.setTertiaryTheme();\n        break;\n      default:\n        this.themeService.setPrimaryTheme();\n        break;\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.themeChangedSubscription.unsubscribe();\n  }\n\n  protected switchTheme(theme: ITheme): void {\n    switch (theme.name) {\n      case 'primary-theme':\n        this.renderer.removeClass(\n          this.elementRef.nativeElement,\n          'secondary-theme'\n        );\n\n        this.renderer.removeClass(\n          this.elementRef.nativeElement,\n          'tertiary-theme'\n        );\n\n        this.renderer.addClass(this.elementRef.nativeElement, 'primary-theme');\n        break;\n\n      case 'secondary-theme':\n        this.renderer.removeClass(\n          this.elementRef.nativeElement,\n          'primary-theme'\n        );\n\n        this.renderer.removeClass(\n          this.elementRef.nativeElement,\n          'tertiary-theme'\n        );\n\n        this.renderer.addClass(\n          this.elementRef.nativeElement,\n          'secondary-theme'\n        );\n        break;\n\n      case 'tertiary-theme':\n        this.renderer.removeClass(\n          this.elementRef.nativeElement,\n          'secondary-theme'\n        );\n\n        this.renderer.removeClass(\n          this.elementRef.nativeElement,\n          'primary-theme'\n        );\n\n        this.renderer.addClass(this.elementRef.nativeElement, 'tertiary-theme');\n        break;\n\n      default:\n        break;\n    }\n  }\n}\n\n@NgModule({\n  declarations: [ThemeColorDirective],\n  exports: [ThemeColorDirective],\n})\nexport class ThemeColorDirectiveModule {}\n","import { AbstractControl, ValidationErrors } from '@angular/forms';\n\nexport const comparePasswords = (\n  control: AbstractControl\n): ValidationErrors | null => {\n  const newPassword = control.get('newPassword');\n  const repeatNewPassword = control.get('repeatPassword');\n\n  return newPassword &&\n    repeatNewPassword &&\n    newPassword.value !== repeatNewPassword.value\n    ? { notMatch: true }\n    : null;\n};\n","import { Component } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { MatDialogRef } from '@angular/material/dialog';\nimport { GraphQLClients } from '@core/enums/graphql-clients.enum';\nimport { comparePasswords } from '@core/functions/form-validators';\nimport { UPDATE_PASSWORD } from '@core/graphql/queries/account.queries';\nimport { IUpdateUserPassword } from '@core/interfaces/update-user-password.interface';\nimport { Apollo, ApolloBase } from 'apollo-angular';\n\n@Component({\n  selector: 'update-user-password',\n  template: `\n    <div class=\"update-user-password-modal\">\n      <div class=\"modal-header-actions\">\n        <button\n          class=\"btn btn-icon\"\n          type=\"button\"\n          (click)=\"matDialogRef.close()\"\n          tabindex=\"-1\"\n        >\n          &times;\n        </button>\n      </div>\n      <div class=\"update-user-password-modal__wrapper\">\n        <form\n          [formGroup]=\"updatePasswordForm\"\n          (ngSubmit)=\"submitUpdatePasswordForm()\"\n        >\n          <div class=\"form-group\">\n            <label for=\"old-password\">Old password</label>\n            <input\n              focus\n              type=\"password\"\n              class=\"form-control\"\n              id=\"old-password\"\n              formControlName=\"oldPassword\"\n            />\n\n            <validator\n              [isTouched]=\"updatePasswordForm.get('oldPassword')?.touched\"\n              [controlErrors]=\"updatePasswordForm.get('oldPassword')?.errors\"\n            ></validator>\n          </div>\n\n          <div class=\"form-group\">\n            <label for=\"new-password\">New password</label>\n            <input\n              type=\"password\"\n              class=\"form-control\"\n              id=\"new-password\"\n              formControlName=\"newPassword\"\n            />\n\n            <validator\n              [isTouched]=\"updatePasswordForm.get('newPassword')?.touched\"\n              [controlErrors]=\"updatePasswordForm.get('newPassword')?.errors\"\n            ></validator>\n          </div>\n\n          <div class=\"form-group\">\n            <label for=\"repeat-password\">Repeat new password</label>\n            <input\n              type=\"password\"\n              class=\"form-control\"\n              id=\"repeat-password\"\n              formControlName=\"repeatPassword\"\n            />\n\n            <validator\n              [isTouched]=\"updatePasswordForm.get('repeatPassword')?.touched\"\n              [controlErrors]=\"updatePasswordForm?.errors\"\n            ></validator>\n          </div>\n\n          <div class=\"modal-action-buttons\">\n            <button\n              class=\"btn btn-secondary\"\n              (click)=\"matDialogRef.close()\"\n              type=\"button\"\n            >\n              Cancel\n            </button>\n            <button class=\"btn btn-primary\" type=\"submit\">Confirm</button>\n          </div>\n        </form>\n      </div>\n    </div>\n  `,\n  styleUrls: ['update-user-password-modal.component.scss'],\n})\nexport class UpdateUserPasswordModalComponent {\n  public updatePasswordForm: FormGroup;\n  private apolloBase: ApolloBase;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private apolloProvider: Apollo,\n    public matDialogRef: MatDialogRef<UpdateUserPasswordModalComponent>\n  ) {\n    this.apolloBase = this.apolloProvider.use(GraphQLClients.MAIN);\n    this.updatePasswordForm = formBuilder.group(\n      {\n        oldPassword: ['', [Validators.required]],\n        newPassword: ['', [Validators.required, Validators.minLength(8)]],\n        repeatPassword: ['', [Validators.required, Validators.minLength(8)]],\n      },\n      { validators: comparePasswords }\n    );\n  }\n\n  public submitUpdatePasswordForm(): void {\n    if (this.updatePasswordForm.invalid) {\n      return;\n    }\n\n    const { oldPassword, newPassword, repeatPassword }: IUpdateUserPassword =\n      this.updatePasswordForm.value;\n\n    this.apolloBase\n      .mutate({\n        mutation: UPDATE_PASSWORD,\n        variables: {\n          oldPassword,\n          newPassword,\n          repeatPassword,\n        },\n      })\n      .subscribe(\n        (val) => {\n          this.matDialogRef.close();\n        },\n        (error) => {\n          console.log('There was an error sending the query', error);\n        }\n      );\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { Component, NgModule, OnDestroy } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { Event, NavigationEnd, Router, RouterModule } from '@angular/router';\nimport { AccountInformation } from '@core/interfaces/account-information.interface';\nimport { SignedStatus } from '@core/interfaces/signed-status.interface';\nimport { AccountService } from '@core/services/account.service';\nimport {\n  EditablePageService,\n  EditableState,\n} from '@core/services/editable-page.service';\nimport { Observable, Subscription } from 'rxjs';\nimport { filter } from 'rxjs/operators';\nimport { UpdateUserPasswordModalComponent } from '../admin/update-user-password-modal/update-user-password-modal.component';\n\n@Component({\n  selector: 'tool-bar',\n  styleUrls: ['./tool-bar.component.scss'],\n  template: `\n    <ng-container *ngIf=\"signedStatus$ | async as signedStatus\">\n      <div class=\"tool-bar\" *ngIf=\"signedStatus.isSignedIn\">\n        <ul class=\"tool-bar-items\">\n          <ng-container\n            *ngIf=\"accountInformation$ | async as accountInformation\"\n          >\n            <li class=\"tool-bar-item\" *ngIf=\"accountInformation\">\n              <span class=\"email-account\"> {{ accountInformation.email }} </span>\n            </li>\n          </ng-container>\n\n          <ng-container\n            *ngIf=\"editablePageStatus$ | async as editablePageStatus\"\n          >\n            <li class=\"tool-bar-item\" *ngIf=\"editablePageStatus.editable\">\n              <a [routerLink]=\"editablePageStatus.editionPage\"> Edit Page </a>\n            </li>\n          </ng-container>\n\n          <li class=\"tool-bar-item\">\n            <a (click)=\"updatePassword()\"> Update Password </a>\n          </li>\n          <li class=\"tool-bar-item\">\n            <a (click)=\"closeSession()\"> Close session </a>\n          </li>\n        </ul>\n      </div>\n    </ng-container>\n  `,\n})\nexport class ToolBarComponent implements OnDestroy {\n  public editablePageStatus$: Observable<EditableState>;\n  public signedStatus$: Observable<SignedStatus>;\n  public accountInformation$: Observable<AccountInformation | null>;\n  private routeChanged$: Subscription;\n\n  constructor(\n    private editablePage: EditablePageService,\n    private router: Router,\n    private accountService: AccountService,\n    private matDialog: MatDialog\n  ) {\n    this.routeChanged$ = this.router.events\n      .pipe(filter((navEvent: Event) => navEvent instanceof NavigationEnd))\n      .subscribe(() => {\n        this.editablePage.removeEditable();\n      });\n\n    this.signedStatus$ = this.accountService.observeSignedInStatus();\n    this.accountInformation$ = this.accountService.observeAccountInformation();\n    this.editablePageStatus$ = this.editablePage.tellMeIfEditable();\n  }\n\n  ngOnDestroy(): void {\n    this.routeChanged$.unsubscribe();\n  }\n\n  public closeSession(): void {\n    this.accountService.signOut();\n  }\n\n  public updatePassword(): void {\n    this.matDialog.open(UpdateUserPasswordModalComponent, {\n      width: '100%',\n      maxWidth: '480px',\n    });\n  }\n}\n\n@NgModule({\n  declarations: [ToolBarComponent],\n  imports: [CommonModule, RouterModule],\n  exports: [ToolBarComponent],\n})\nexport class ToolBarModule {}\n","import { Directive, ElementRef, HostListener, Renderer2 } from '@angular/core';\n\n@Directive({\n  selector: '[fixedHeader]',\n})\nexport class FixedHeaderDirective {\n  constructor(private elem: ElementRef, private renderer: Renderer2) {}\n\n  @HostListener('window:scroll', ['$event'])\n  onScroll(): void {\n    const navHeight = this.elem.nativeElement.getBoundingClientRect();\n    const menuHasBeenActived = this.elem.nativeElement.querySelector(\n      '.header__menu.menu-opened'\n    );\n\n    if (menuHasBeenActived) {\n      return;\n    }\n\n    if (window.pageYOffset > navHeight.height) {\n      this.renderer.addClass(this.elem.nativeElement, 'opacity-0');\n    } else {\n      this.renderer.removeClass(this.elem.nativeElement, 'opacity-0');\n    }\n\n    if (window.pageYOffset > window.innerHeight / 2) {\n      this.renderer.removeClass(this.elem.nativeElement, 'opacity-0');\n      this.renderer.addClass(this.elem.nativeElement, 'fixed-nav-menu');\n    }\n\n    if (window.pageYOffset < window.innerHeight / 6) {\n      this.renderer.removeClass(this.elem.nativeElement, 'fixed-nav-menu');\n    }\n\n    if (\n      window.pageYOffset > window.innerHeight / 3 &&\n      window.pageYOffset < window.innerHeight / 2\n    ) {\n      this.renderer.removeClass(this.elem.nativeElement, 'opacity-0');\n      this.renderer.addClass(this.elem.nativeElement, 'opacity-0');\n    }\n  }\n}\n","import {\n  Directive,\n  ElementRef,\n  HostListener,\n  Input,\n  Renderer2,\n} from '@angular/core';\n\n@Directive({\n  selector: '[closeMenu]',\n})\nexport class CloseMenuDirective {\n  @Input() parent: any;\n\n  constructor(private elemRef: ElementRef, private renderer: Renderer2) {}\n\n  @HostListener('click')\n  clickHandler(): void {\n    const menu = this.parent.querySelector('ul.header__menu');\n    const button = this.parent.querySelector('button.header__btn-burguer');\n    const liElem = button.querySelector('i');\n\n    this.renderer.removeClass(menu, 'menu-opened');\n    this.renderer.removeClass(button, 'fixed-bottom-button');\n\n    this.renderer.removeClass(liElem, 'bi-x-circle');\n\n    this.renderer.addClass(liElem, 'bi-list');\n  }\n}\n","import {\n  Directive,\n  ElementRef,\n  HostListener,\n  Input,\n  Renderer2,\n} from '@angular/core';\n\n@Directive({\n  selector: '[openMobileMenu]',\n})\nexport class OpenMobileDirective {\n  @Input() menu: any;\n  @Input() parent: any;\n\n  constructor(private elemRef: ElementRef, private renderer: Renderer2) {}\n\n  @HostListener('click')\n  private clickHandler(): void {\n    const isMenuOpened = this.menu.classList.contains('menu-opened');\n\n    if (isMenuOpened) {\n      this.renderer.removeClass(this.menu, 'menu-opened');\n\n      this.renderer.removeClass(\n        this.elemRef.nativeElement.querySelector('i'),\n        'bi-x-circle'\n      );\n\n      this.renderer.addClass(\n        this.elemRef.nativeElement.querySelector('i'),\n        'bi-list'\n      );\n\n      this.renderer.removeClass(\n        this.elemRef.nativeElement,\n        'fixed-bottom-button'\n      );\n    } else {\n      this.renderer.addClass(this.menu, 'menu-opened');\n\n      this.renderer.removeClass(\n        this.elemRef.nativeElement.querySelector('i'),\n        'bi-list'\n      );\n\n      this.renderer.addClass(\n        this.elemRef.nativeElement.querySelector('i'),\n        'bi-x-circle'\n      );\n\n      this.renderer.addClass(this.elemRef.nativeElement, 'fixed-bottom-button');\n    }\n  }\n}\n","<header class=\"header\">\n  <nav class=\"header__main-navigation\" fixedHeader role=\"navigation\">\n    <div class=\"limiter\">\n      <div #parent class=\"container-fluid d-flex justify-content-between\">\n        <div class=\"header__logo\">\n          <a\n            routerLink=\"/\"\n            routerLinkActive=\"active-link\"\n            [routerLinkActiveOptions]=\"{ exact: true }\"\n          >\n            Home\n          </a>\n        </div>\n\n        <ul class=\"header__menu\" #menu>\n          <li>\n            <a\n              closeMenu\n              [parent]=\"parent\"\n              routerLink=\"/\"\n              fragment=\"about\"\n              [ngClass]=\"{\n                'active-link': (route.fragment | async) === 'about'\n              }\"\n              class=\"header__menu-link\"\n            >\n              Who am I?\n            </a>\n          </li>\n          <li>\n            <a\n              closeMenu\n              [parent]=\"parent\"\n              class=\"header__menu-link\"\n              routerLink=\"/\"\n              fragment=\"experience\"\n              [ngClass]=\"{\n                'active-link': (route.fragment | async) === 'experience'\n              }\"\n            >\n              Experiencie\n            </a>\n          </li>\n          <li>\n            <a\n              closeMenu\n              [parent]=\"parent\"\n              class=\"header__menu-link\"\n              routerLink=\"/\"\n              fragment=\"abilities\"\n              [ngClass]=\"{\n                'active-link': (route.fragment | async) === 'abilities'\n              }\"\n            >\n              Abilities\n            </a>\n          </li>\n          <li>\n            <a\n              closeMenu\n              [parent]=\"parent\"\n              class=\"header__menu-link\"\n              routerLink=\"/\"\n              fragment=\"contact\"\n              [ngClass]=\"{\n                'active-link': (route.fragment | async) === 'contact'\n              }\"\n            >\n              Contact\n            </a>\n          </li>\n          <li>\n            <a\n              class=\"header__menu-link\"\n              routerLink=\"/about-this-page\"\n              routerLinkActive=\"active-link\"\n            >\n              What about this Website?\n            </a>\n          </li>\n        </ul>\n\n        <button\n          openMobileMenu\n          aria-label=\"menu\"\n          [menu]=\"menu\"\n          [parent]=\"parent\"\n          type=\"button\"\n          class=\"header__btn-burguer\"\n        >\n          <i class=\"bi bi-list\"></i>\n        </button>\n      </div>\n    </div>\n  </nav>\n\n  <div class=\"header__text\">\n    <ng-container *ngIf=\"headerTitle$ | async as titleSet\">\n      <h1>{{ titleSet.title }}</h1>\n      <hr />\n      <p>{{ titleSet.description }}</p>\n    </ng-container>\n  </div>\n</header>\n","import { Component } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { IHeaderTitle } from '@core/interfaces/header-title.interface';\nimport { HeaderTitleService } from '@core/services/header-title.service';\nimport { Observable } from 'rxjs';\n\n@Component({\n  selector: 'primary-header',\n  templateUrl: 'primary-header.component.html',\n  styleUrls: ['primary-header.component.scss'],\n})\nexport class PrimaryHeaderComponent {\n  headerTitle$: Observable<IHeaderTitle>;\n\n  constructor(\n    private headerTitle: HeaderTitleService,\n    public readonly route: ActivatedRoute\n  ) {\n    this.headerTitle$ = this.headerTitle.getTitle();\n  }\n}\n","import { gql } from 'apollo-angular';\n\nexport const GITHUB_BUILDCOMMIT = gql`\n  query getCurrentBuildCommit {\n    getCurrentBuildCommit {\n      build_id\n    }\n  }\n`;\n","<footer class=\"footer\">\n  <div class=\"limiter\">\n    <div class=\"footer__container container-fluid\">\n      <div class=\"row\">\n        <div\n          class=\"footer__first-list col-12 col-md-4 text-sm-center text-md-left\"\n        >\n          <ul>\n            <li>\n              <ng-container *ngIf=\"selectedTheme$ | async\">\n                <select\n                  name=\"theme\"\n                  id=\"theme-selector\"\n                  [(ngModel)]=\"theme\"\n                  (change)=\"handleChangedTheme()\"\n                >\n                  <option value=\"primary-theme\">🤔️</option>\n                  <option value=\"secondary-theme\">👽️</option>\n                  <option value=\"tertiary-theme\">🙈️</option>\n                </select>\n              </ng-container>\n            </li>\n            <li><i class=\"bi bi-geo-alt\"></i> Tepic, Nayarit. México.</li>\n\n            <li><a routerLink=\"/thanks\"> Thanks for the free assets</a></li>\n\n            <li *ngIf=\"signedStatus$ | async as signedStatus\">\n              <ng-container *ngIf=\"!signedStatus.isSignedIn\">\n                <a routerLink=\"/auth/sign-in\">Sign In </a>\n              </ng-container>\n            </li>\n          </ul>\n        </div>\n\n        <div class=\"col-12 col-md-4\">\n          <ul class=\"footer__links text-sm-center text-md-left\">\n            <li>\n              <a\n                target=\"_blank\"\n                href=\"https://github.com/7Mica\"\n                rel=\"noopener noreferrer\"\n                ><i class=\"bi bi-github\"></i> Github profile</a\n              >\n            </li>\n\n            <li>\n              <a\n                target=\"_blank\"\n                href=\"https://github.com/7Mica/peronsal-resume\"\n                rel=\"noopener noreferrer\"\n                ><i class=\"bi bi-github\"></i> Web site's repository</a\n              >\n            </li>\n\n            <li>\n              <a\n                target=\"_blank\"\n                href=\"https://github.com/7Mica/crispy-cms\"\n                rel=\"noopener noreferrer\"\n                ><i class=\"bi bi-github\"></i> Web site's backend repository</a\n              >\n            </li>\n          </ul>\n        </div>\n\n        <div class=\"col-12 col-md-4\">\n          <div class=\"footer__made-by text-center\">\n            <img src=\"assets/icons/brand-icons/angular.svg\" alt=\"Angular\" />\n            <p>Made with ❤️ in Angular</p>\n          </div>\n        </div>\n      </div>\n\n      <div class=\"footer__copyright row\">\n        <div class=\"col-12\">\n          <p class=\"text-center\">\n            Build\n            <a\n              class=\"special-link\"\n              *ngIf=\"buildCommit$ | async as buildCommit\"\n              [href]=\"\n                'https://github.com/7Mica/personal-resume/tree/' + buildCommit\n              \"\n            >\n              {{ buildCommit }}\n            </a>\n          </p>\n        </div>\n      </div>\n    </div>\n  </div>\n</footer>\n","import { Component, OnInit } from '@angular/core';\nimport { GraphQLClients } from '@core/enums/graphql-clients.enum';\nimport { GITHUB_BUILDCOMMIT } from '@core/graphql/queries/github.queries';\nimport { SignedStatus } from '@core/interfaces/signed-status.interface';\nimport { ITheme } from '@core/interfaces/theme.interface';\nimport { AccountService } from '@core/services/account.service';\nimport { ThemeColorService } from '@core/services/theme-color.service';\nimport { Apollo, ApolloBase } from 'apollo-angular';\nimport { EMPTY, Observable } from 'rxjs';\nimport { map, tap } from 'rxjs/operators';\n\n@Component({\n  selector: 'primary-footer',\n  templateUrl: 'primary-footer.component.html',\n  styleUrls: ['primary-footer.component.scss'],\n})\nexport class PrimaryFooterComponent implements OnInit {\n  theme = 'primary-theme';\n  public selectedTheme$: Observable<ITheme> = EMPTY;\n  public signedStatus$: Observable<SignedStatus>;\n  public buildCommit$: Observable<any>;\n  private apolloBase: ApolloBase;\n\n  constructor(\n    private themeService: ThemeColorService,\n    private accountService: AccountService,\n    private apolloProvider: Apollo\n  ) {\n    this.signedStatus$ = this.accountService.observeSignedInStatus();\n    this.apolloBase = this.apolloProvider.use(GraphQLClients.MAIN);\n\n    this.buildCommit$ = this.apolloBase\n      .query({ query: GITHUB_BUILDCOMMIT })\n      .pipe(\n        map(({ data }: any) => data?.getCurrentBuildCommit?.build_id),\n        tap((e) => console.log(e))\n      );\n  }\n\n  ngOnInit(): void {\n    this.selectedTheme$ = this.themeService\n      .themeValueChanged()\n      .pipe(tap((theme: ITheme) => (this.theme = theme.name)));\n  }\n\n  public closeSession(): void {\n    this.accountService.signOut();\n  }\n\n  handleChangedTheme(): void {\n    switch (this.theme) {\n      case 'primary-theme':\n        this.themeService.setPrimaryTheme();\n        break;\n      case 'secondary-theme':\n        this.themeService.setSecondaryTheme();\n        break;\n      case 'tertiary-theme':\n        this.themeService.setTertiaryTheme();\n        break;\n      default:\n        break;\n    }\n  }\n}\n","import { Routes } from '@angular/router';\nimport { SessionGuard } from '../auth/guards/session.guard';\nimport { PagesComponent } from './pages.component';\n\nexport const PAGES_ROUTES: Routes = [\n  {\n    path: '',\n    component: PagesComponent,\n    children: [\n      {\n        path: '',\n        data: {\n          editable: true,\n        },\n        loadChildren: () =>\n          import('./public/main/main-page.module').then(\n            (m) => m.MainPageModule\n          ),\n      },\n      {\n        path: 'thanks',\n        loadChildren: () =>\n          import('./public/thanks/thanks.module').then((m) => m.ThanksModule),\n      },\n      {\n        path: 'playground',\n        loadChildren: () =>\n          import('./public/playground/playground.module').then(\n            (m) => m.PlaygroundModule\n          ),\n      },\n      {\n        path: 'about-this-page',\n        loadChildren: () =>\n          import('./public/about-this-page/about-this-page.module').then(\n            (m) => m.AboutThisPageModule\n          ),\n      },\n      {\n        path: 'edit-resume',\n        canActivate: [SessionGuard],\n        loadChildren: () =>\n          import('../pages/admin/resume/resume.module').then(\n            (m) => m.ResumeModule\n          ),\n      },\n    ],\n  },\n];\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'pages-root',\n  template: `\n    <main id=\"main-content\" class=\"secondary-theme\" themeColor>\n      <primary-header></primary-header>\n      <tool-bar></tool-bar>\n      <router-outlet></router-outlet>\n      <primary-footer></primary-footer>\n    </main>\n  `,\n  styles: [],\n})\nexport class PagesComponent {}\n","import { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { ThemeColorDirectiveModule } from '@core/directives/theme-color.directive';\nimport { ToolBarModule } from '@shared/components/tool-bar/tool-bar.component';\nimport { PrimaryFooterModule } from '@shared/layout/footer/primary-footer.module';\nimport { PrimaryHeaderModule } from '@shared/layout/header/primary-header.module';\nimport { PagesComponent } from './pages.component';\nimport { PAGES_ROUTES } from './pages.routes';\n\n@NgModule({\n  declarations: [PagesComponent],\n  imports: [\n    RouterModule.forChild(PAGES_ROUTES),\n    PrimaryHeaderModule,\n    PrimaryFooterModule,\n    ToolBarModule,\n    ThemeColorDirectiveModule,\n  ],\n})\nexport class PagesModule {}\n"],"sourceRoot":"webpack:///"}