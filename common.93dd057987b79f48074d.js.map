{"version":3,"sources":["./src/app/auth/guards/session.guard.ts","./src/app/core/animations/common-animations.ts","./src/app/shared/components/form/validator/validator.component.ts"],"names":["SessionGuard","accountService","router","route","state","this","validateCurrentSession","pipe","isSignedIn","url","navigate","error","graphQLErrors","some","e","statusCode","of","fadeInOutTransition","opacity","scaleAndOpaque","transform","ValidatorComponent","controlErrors","isTouched","controlErrorsIn","isTouchedIn","currentValue"],"mappings":"qMAeO,Y,MAAMA,EACX,YAAoBC,EAAwCC,GAAxC,KAAAD,iBAAwC,KAAAC,SAC5D,YACEC,EACAC,GAMA,OAAOC,KAAKJ,eAAeK,yBAAyBC,MAClD,OAAKC,GAECA,GAA4B,kBAAdJ,EAAMK,KACtBJ,KAAKH,OAAOQ,SAAS,CAAC,OACf,IAIJF,GAA4B,kBAAdJ,EAAMK,KAIpBD,IACHH,KAAKH,OAAOQ,SAAS,CAAC,MACfF,KAMX,OAAYG,GAERA,EAAMC,cAAcC,KAAMC,GAA4B,MAAjBA,EAAEC,aACzB,kBAAdX,EAAMK,KAEC,IAAAO,KAAG,IAEVX,KAAKH,OAAOQ,SAAS,CAAC,OACf,IAAAM,KAAG,O,6CAvCPhB,GAAY,yB,0BAAZA,EAAY,QAAZA,EAAY,qBAFX,S,GAEP,I,oECLA,MAAMiB,EAAsB,EACjC,QAAW,SAAU,EACnB,QAAM,CAAEC,QAAS,OACjB,QAAQ,KAAK,QAAM,CAAEA,QAAS,UAEhC,QAAW,SAAU,EACnB,QAAM,CAAEA,QAAS,OACjB,QAAQ,KAAK,QAAM,CAAEA,QAAS,UAIrBC,EAAiB,EAC5B,QAAW,SAAU,EACnB,QAAM,CAAEC,UAAW,WAAYF,QAAS,KACxC,QAAQ,KAAK,QAAM,CAAEE,UAAW,WAAYF,QAAS,QAEvD,QAAW,SAAU,EACnB,QAAM,CAAEE,UAAW,IAAKF,QAAS,OACjC,QAAQ,KAAK,QAAM,CAAEE,UAAW,WAAYF,QAAS,S,4HCpBrD,kBAKE,S,yBACF,S,qBALE,iCAIA,oEAMC,Y,MAAMG,EAdb,cAgBE,KAAAC,cAAqD,KAGrD,KAAAC,WAAiC,EAE1B,KAAAC,gBAAuD,KACvD,KAAAC,aAAc,EAErB,aAAY,cAAEH,EAAa,UAAEC,IACvBD,IACFjB,KAAKmB,gBAAkBF,EAAcI,cAGnCH,IACFlB,KAAKoB,YAAcF,EAAUG,e,6CAhBtBL,I,wBAAAA,EAAkB,qNAX3B,wB,KAGG,gD,uGAMO,EAAC,QAAQ,kBAAmB,U,GAEnC","file":"common.93dd057987b79f48074d.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport {\n  ActivatedRouteSnapshot,\n  CanActivate,\n  Router,\n  RouterStateSnapshot,\n  UrlTree,\n} from '@angular/router';\nimport { AccountService } from '@core/services/account.service';\nimport { Observable, of } from 'rxjs';\nimport { catchError, map } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class SessionGuard implements CanActivate {\n  constructor(private accountService: AccountService, private router: Router) {}\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ):\n    | boolean\n    | UrlTree\n    | Observable<boolean | UrlTree>\n    | Promise<boolean | UrlTree> {\n    return this.accountService.validateCurrentSession().pipe(\n      map((isSignedIn) => {\n        // If user is signed in and navigates to login page, it redirects to /\n        if (isSignedIn && state.url === '/auth/sign-in') {\n          this.router.navigate(['/']);\n          return false;\n        }\n\n        // If user is not signed in and navigates to login page, it can pass\n        if (!isSignedIn && state.url === '/auth/sign-in') {\n          return true;\n        }\n\n        if (!isSignedIn) {\n          this.router.navigate(['/']);\n          return isSignedIn;\n        }\n\n        // User can enter to any other pages depending if it is signed in\n        return isSignedIn;\n      }),\n      catchError((error) => {\n        if (\n          error.graphQLErrors.some((e: any) => e.statusCode === 401) &&\n          state.url === '/auth/sign-in'\n        ) {\n          return of(true);\n        } else {\n          this.router.navigate(['/']);\n          return of(false);\n        }\n      })\n    );\n  }\n}\n","import {\n  style,\n  animate,\n  keyframes,\n  AnimationAnimateMetadata,\n  transition,\n} from '@angular/animations';\n\n/**********  Entries Animations **********/\n\nexport const fadeInOutTransition = [\n  transition(':enter', [\n    style({ opacity: '0' }),\n    animate(250, style({ opacity: '1' })),\n  ]),\n  transition(':leave', [\n    style({ opacity: '*' }),\n    animate(250, style({ opacity: '0' })),\n  ]),\n];\n\nexport const scaleAndOpaque = [\n  transition(':enter', [\n    style({ transform: 'scale(0)', opacity: 0 }),\n    animate(250, style({ transform: 'scale(1)', opacity: 1 })),\n  ]),\n  transition(':leave', [\n    style({ transform: '*', opacity: '*' }),\n    animate(250, style({ transform: 'scale(0)', opacity: 0 })),\n  ]),\n];\n\nexport const entryAnimation = (\n  name: string,\n  delay = 0.1\n): AnimationAnimateMetadata => {\n  switch (name) {\n    case 'scaleInTop':\n      return animate(\n        `0.5s ${delay}s cubic-bezier(0.250, 0.460, 0.450, 0.940)`,\n        keyframes([\n          style({ visibility: 'visible', opacity: 0 }),\n          style({ transform: 'scale(0)', transformOrigin: '50% 0%' }),\n          style({\n            transform: 'scale(1)',\n            transformOrigin: '50% 0%',\n            opacity: 1,\n          }),\n        ])\n      );\n\n    case 'scaleInHorCenter':\n      return animate(\n        `0.5s ${delay}s cubic-bezier(0.250, 0.460, 0.450, 0.940)`,\n        keyframes([\n          style({ visibility: 'visible', opacity: 0 }),\n          style({ transform: 'scaleX(0)' }),\n          style({ transform: 'scaleX(1)', opacity: 1 }),\n        ])\n      );\n\n    case 'slideFromLeft':\n      return animate(\n        `0.5s ${delay}s cubic-bezier(0.250, 0.460, 0.450, 0.940)`,\n        keyframes([\n          style({ visibility: 'visible', opacity: 0 }),\n          style({ transform: 'translateX(-50%)' }),\n          style({ transform: 'translateX(50%)', opacity: 1 }),\n        ])\n      );\n\n    case 'slideFromRight':\n      return animate(\n        `0.5s ${delay}s cubic-bezier(0.250, 0.460, 0.450, 0.940)`,\n        keyframes([\n          style({ visibility: 'visible', opacity: 0 }),\n          style({ transform: 'translateX(50%)' }),\n          style({ transform: 'translateX(-50%)', opacity: 1 }),\n        ])\n      );\n    default:\n      return animate(\n        `0.5s ${delay}s cubic-bezier(0.250, 0.460, 0.450, 0.940)`,\n        keyframes([\n          style({ visibility: 'visible', opacity: 0 }),\n          style({ transform: 'translateX(50%)' }),\n          style({ transform: 'translateX(-50%)', opacity: 1 }),\n        ])\n      );\n  }\n};\n","import { trigger } from '@angular/animations';\nimport { Component, Input, OnChanges, SimpleChanges } from '@angular/core';\nimport { ValidationErrors } from '@angular/forms';\nimport { fadeInOutTransition } from '@core/animations/common-animations';\n\n@Component({\n  selector: 'validator',\n  template: `\n    <span\n      @appearValidator\n      class=\"form-validator\"\n      *ngIf=\"isTouchedIn && controlErrorsIn\"\n    >\n      {{ controlErrorsIn | formValidator: isTouchedIn }}\n    </span>\n  `,\n  styleUrls: ['validator.component.scss'],\n  animations: [trigger('appearValidator', fadeInOutTransition)],\n})\nexport class ValidatorComponent implements OnChanges {\n  @Input()\n  controlErrors: ValidationErrors | null | undefined = null;\n\n  @Input()\n  isTouched: boolean | undefined = false;\n\n  public controlErrorsIn: ValidationErrors | null | undefined = null;\n  public isTouchedIn = false;\n\n  ngOnChanges({ controlErrors, isTouched }: SimpleChanges): void {\n    if (controlErrors) {\n      this.controlErrorsIn = controlErrors.currentValue;\n    }\n\n    if (isTouched) {\n      this.isTouchedIn = isTouched.currentValue;\n    }\n  }\n}\n"],"sourceRoot":"webpack:///"}